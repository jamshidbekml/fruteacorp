enum ORDER_STATUS {
    created
    pending_payment
    paid
    cancelled
    onway
    delivered
}

enum TRANSACTION_STATUS {
    pending
    paid
    cancelled
}

model Orders {
    id           String         @id @default(uuid()) @db.Uuid
    userId       String?        @db.Uuid
    user         Users?         @relation(fields: [userId], references: [id], onDelete: SetNull)
    totalAmount  Decimal        @default(0) @db.Decimal(10, 2)
    status       ORDER_STATUS   @default(created)
    createdAt    DateTime       @default(now())
    updatedAt    DateTime       @updatedAt
    orderItems   OrderProduct[]
    Transactions Transactions[]

    @@map("orders")
}

model OrderProduct {
    id        String   @id @default(uuid())
    orderId   String   @db.Uuid // Order bilan bog'lanadi
    productId String   @db.Uuid // Mahsulot ID
    quantity  Int      @default(1)
    price     Decimal
    Product   Products @relation(fields: [productId], references: [id])
    Order     Orders   @relation(fields: [orderId], references: [id])
}

model Transactions {
    id          String             @id @default(uuid()) @db.Uuid
    uid         String             @unique
    orederId    String?            @db.Uuid
    amount      Int
    reason      Int?
    state       Int
    status      TRANSACTION_STATUS
    performTime DateTime?
    cancelTime  DateTime?
    createdAt   DateTime           @default(now())
    updatedAt   DateTime           @updatedAt
    order       Orders?            @relation(fields: [orederId], references: [id], onDelete: SetNull)

    @@map("transactions")
}
